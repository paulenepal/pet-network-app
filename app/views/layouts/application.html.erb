<!DOCTYPE html>
<html>
  <head>
    <title>The Ruby Project: Pet Network App</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag "tailwind", "inter-font", "data-turbo-track": "reload" %>

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>

      <!-- Sendbird SDK -->
    <%# <script src="https://static.sendbird.com/widget/sendbird.min.js"></script> %>
  </head>

  <body data-sendbird-app-id="<%= @sendbird_app_id %>" data-admin-id="<%= current_user.id if user_signed_in? && current_user.role == 'admin' %>">
    <main class="container w-full h-full flex flex-col">
      <%= yield %>

    </main>
    <script>
      // app/javascript/chat.js
      document.addEventListener('DOMContentLoaded', () => {
      console.log('JavaScript loaded');
      
      const chatLinks = document.querySelectorAll('.chat-link');
      const chatContainer = document.getElementById('chat-container');
      const chatUsername = document.getElementById('chat-username');
      const minimizeChat = document.getElementById('minimize-chat');
      const closeChat = document.getElementById('close-chat');
      const chatInput = document.getElementById('chat-input');
      const chatMessages = document.getElementById('chat-messages');

      if (!chatContainer || !chatUsername || !minimizeChat || !closeChat || !chatInput || !chatMessages) {
        console.error('One or more elements are missing');
        return;
      }

      chatLinks.forEach(link => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
          console.log('Chat link clicked');
          const userId = e.currentTarget.dataset.userId;
          const username = e.currentTarget.dataset.username;
          console.log('User ID:', userId);
          console.log('Username:', username);
          chatUsername.innerText = username;
          chatContainer.classList.remove('hidden');
          chatContainer.classList.add('block');
        });
      });

      minimizeChat.addEventListener('click', () => {
        console.log('Minimize button clicked');
        chatContainer.classList.toggle('h-10');
        chatMessages.classList.toggle('hidden');
      });

      closeChat.addEventListener('click', () => {
        console.log('Close button clicked');
        chatContainer.classList.add('hidden');
      });

      chatInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
          console.log('Enter key pressed');
          const message = chatInput.value;
          chatInput.value = '';
          const messageElement = document.createElement('div');
          messageElement.classList.add('p-2', 'border', 'border-gray-300', 'rounded', 'mb-2');
          messageElement.innerText = message;
          chatMessages.appendChild(messageElement);
        }
      });
    });

  </script>
  
  </body>
</html>
